{"version":3,"sources":["components/ProtectedRoute.js","images/Vector.svg","components/Header.js","images/Pencil.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/AuthForm.js","components/Login.js","components/Register.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeletePlacePopup.js","images/success-icon.svg","images/decline-icon.svg","components/InfoTooltip.js","utils/api.js","utils/auth.js","components/App.js","index.js"],"names":["ProtectedRoute","Component","component","loggedIn","props","to","Header","onSignOut","email","history","useHistory","location","useLocation","className","src","logo","alt","onClick","pathname","push","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwner","owner","_id","isLiked","likes","some","i","link","name","type","length","withRouter","cards","onEditAvatar","onAddPlace","onEditProfile","avatar","pencil","about","map","AuthForm","title","buttonText","onSubmit","useState","setEmail","password","setPassword","e","preventDefault","noValidate","onChange","target","value","placeholder","required","minLength","maxLength","handleLogin","Footer","Date","getFullYear","ImagePopup","onClose","isSelected","PopupWithForm","isOpen","children","EditProfilePopup","onUpdateUser","setName","description","setDescription","useEffect","id","EditAvatarPopup","inputRef","useRef","current","ref","AddPlacePopup","setTitle","setLink","DeletePlacePopup","onDelete","InfoTooltip","isRegistered","success","decline","options","this","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","body","JSON","stringify","cardId","newInfo","newLink","authorization","data","token","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","deletedCard","setDeletedCard","setLoggedIn","setIsRegistered","closeAllPopups","localStorage","getItem","auth","checkToken","catch","err","console","log","all","api","getUserInfo","getInitialCards","userData","cardsData","Provider","removeItem","path","register","login","setItem","Main","dislikeCard","newCard","state","c","likeCard","changeUserInfo","changeAvatar","addCard","deleteCard","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beb29b3f.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute({component: Component, loggedIn, ...props}) {\n  return (\n    <Route>\n      {loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />}\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;\n","export default __webpack_public_path__ + \"static/media/Vector.abb64ac9.svg\";","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../images/Vector.svg';\n\n// шапка сайта\nfunction Header({ onSignOut, email, loggedIn }) {\n  const history = useHistory();\n  const location = useLocation();\n\n  // переход на страницу регистрации/входа по кнопке в шапке\n  function handleClick() {\n    if (location.pathname === '/sign-up') {\n      history.push('/sign-in')\n    }\n    else if (location.pathname === '/sign-in') {\n      history.push('/sign-up')\n    }\n    else if (location.pathname === '/main') {\n      history.push('/sign-in');\n      onSignOut();\n    }\n  }\n\n  return (\n    <header className=\"header\">\n        <img className=\"header__logo\" src={logo} alt=\"логотип\"/>\n        <div className=\"header__user-info\">\n          {loggedIn && <p className=\"header__email\">{email}</p>}\n          <button onClick={handleClick} className=\"button header__button\">\n            {\n              location.pathname === '/sign-up' ? 'Войти' :\n              location.pathname === '/sign-in' ? 'Регистрация' :\n              location.pathname === '/main' ? 'Выйти' : ''\n            }\n          </button>\n        </div>\n    </header>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/Pencil.a086f758.svg\";","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n// создание фотокарточки\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwner = card.owner._id === currentUser._id;\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  // передача данных о том, какую картинку открыть\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  // поставить/убрать лайк\n  function handleLike() {\n    onCardLike(card);\n  }\n\n  // удалить карточку\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return(\n    <div className=\"element\">\n      <button onClick={handleClick} className=\"element__show-img button\"><img className=\"element__img\" src={card.link} alt={card.name} /></button>\n      <div className=\"element__text\">\n        <h2 className=\"element__title\">{card.name}</h2>\n        <div>\n          <button type=\"button\" onClick={handleLike} className={`element__like button ${isLiked ? 'element__like_active' : ''}`}></button>\n          <p className=\"element__counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    {isOwner ? (\n      <button onClick={handleDeleteClick} type=\"button\" className=\"element__bin button\"></button>\n    ) : ('')}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport pencil from '../images/Pencil.svg';\nimport Card from '../components/Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { withRouter } from 'react-router-dom';\n\n// контент страницы\nfunction Main({cards, onEditAvatar, onAddPlace, onEditProfile, onCardClick, onCardLike, onCardDelete}) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return(\n    <main>\n      <section className=\"profile\">\n        <button onClick={onEditAvatar} className=\"button profile__edit-avatar\">\n          <div className=\"profile__picture\">\n            <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"аватарка\"/>\n            <img className=\"profile__overlay\" src={pencil} alt=\"редактировать\"/>\n          </div>\n        </button>\n        <div className=\"profile__info\">\n          <div className=\"profile__content\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button onClick={onEditProfile} type=\"button\" className=\"profile__edit-button button\"></button>\n          </div>\n            <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button onClick={onAddPlace} type=\"button\" className=\"profile__add-button button\"></button>\n      </section>\n      <section className=\"elements\">\n        {cards.map(card => (\n          <Card\n            key={card._id}\n            card={card}\n            onCardLike={onCardLike}\n            onCardClick={onCardClick}\n            onCardDelete={onCardDelete}\n          />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default withRouter(Main);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction AuthForm({title, buttonText, onSubmit}) {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function handleChangeEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit({\n      'password': password,\n      'email': email\n    });\n  }\n  return (\n    <div className=\"auth-page\">\n      <h2 className=\"auth-page__title\">{title}</h2>\n      <form onSubmit={handleSubmit} noValidate>\n        <input type=\"email\" className=\"auth-page__input\"\n          onChange={handleChangeEmail} value={email || ''} placeholder=\"Email\" required />\n        <input type=\"password\" className=\"auth-page__input\"\n          onChange={handleChangePassword} value={password || ''} placeholder=\"Пароль\" minLength=\"2\" maxLength=\"200\" required />\n        <button type=\"submit\" className=\"auth-page__save button\">{buttonText}</button>\n        { title === \"Регистрация\" ? <Link className=\"auth-page__link\" to=\"/sign-in\">Уже зарегистрированы? Войти</Link> : '' }\n      </form>\n    </div>\n  );\n}\n\nexport default AuthForm;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthForm from './AuthForm';\n\nfunction Login({handleLogin}) {\n  return (\n    <AuthForm title=\"Вход\" buttonText=\"Войти\" onSubmit={handleLogin} />\n  );\n}\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthForm from './AuthForm';\n\nfunction Register({ onSubmit }) {\n  return (\n    <AuthForm title=\"Регистрация\" buttonText=\"Зарегистрироваться\" onSubmit={onSubmit} />\n  );\n}\n\nexport default withRouter(Register);\n","import React from 'react';\n\n// подвал сайта\nfunction Footer() {\n  return(\n    <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\n// попап с полноразмерной картинкой\nfunction ImagePopup({card, onClose}) {\n  return(\n    <section className={`popup popup_show-picture ${card.isSelected ? 'popup_opened' : ''}`}>\n      <figure className=\"popup__show-content\">\n        <button onClick={onClose} type=\"button\" className=\"popup__close button\"></button>\n        <img className=\"popup__picture\" src={card.link} alt={card.name}/>\n        <figcaption className=\"popup__pic-title\">{card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\n// попапы с формами\nfunction PopupWithForm({title, name, isOpen, onClose, children, onSubmit, buttonText}) {\n  return(\n    <section className={`popup popup_${name} ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n          <button onClick={onClose} type=\"button\" className=\"popup__close button\"></button>\n          <h2 className=\"popup__title\">{title}</h2>\n          <form onSubmit={onSubmit} className=\"popup__form\" noValidate>\n            {children}\n            <button type=\"submit\" className=\"popup__save button\">{buttonText}</button>\n          </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  // контроль изменения имени в поле ввода\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  // контроль изменения описания в поле ввода\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  // отправка данных из формы\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  // обновление информации о пользователе\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" name=\"edit-profile\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} buttonText=\"Сохранить\">\n        <input type=\"text\" className=\"popup__input popup__input_profile-name\" name=\"profile-name\"\n          onChange={handleChangeName} value={name || ''} placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required />\n        <span id=\"profile-name-error\" className=\"error\"></span>\n        <input type=\"text\" className=\"popup__input popup__input_profile-description\" name=\"profile-description\"\n          onChange={handleChangeDescription} value={description || ''} placeholder=\"Вид деятельности\" minLength=\"2\" maxLength=\"200\" required />\n        <span id=\"profile-description-error\" className=\"error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateUser}) {\n  const inputRef = React.useRef();\n\n  // обработка нового значения, полученного из поля ввода\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({avatar: inputRef.current.value}, inputRef);\n  }\n  return (\n    <PopupWithForm title=\"Обновить аватар\" name=\"edit-avatar\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} buttonText=\"Сохранить\">\n        <input type=\"url\" className=\"popup__input\" name=\"avatar-link\"\n        ref={inputRef} placeholder=\"Ссылка на фото\" required/>\n        <span id=\"avatar-link-error\" className=\"error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n  const [title, setTitle] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  // контроль изменения названия в поле ввода\n  function handleChangeTitle(e) {\n    setTitle(e.target.value);\n  }\n\n  // контроль изменения ссылки в поле ввода\n  function handleChangeLink(e) {\n    setLink(e.target.value);\n  }\n\n  // отправка данных из формы\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({\n      name: title,\n      link: link,\n    }, setTitle, setLink);\n  }\n  return (\n    <PopupWithForm title=\"Новое место\" name=\"add-picture\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} buttonText=\"Создать\">\n        <input type=\"text\" className=\"popup__input\" name=\"photo-name\"\n          onChange={handleChangeTitle} value={title || ''} placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required/>\n        <span id=\"photo-name-error\" className=\"error\"></span>\n        <input type=\"url\" className=\"popup__input\" name=\"photo-link\"\n          onChange={handleChangeLink} value={link || ''} placeholder=\"Ссылка на картинку\" required/>\n        <span id=\"photo-link-error\" className=\"error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import PopupWithForm from '../components/PopupWithForm';\n\nfunction DeletePlacePopup({isOpen, onClose, onDelete}) {\n  function handleSumbit(e) {\n    e.preventDefault();\n    onDelete();\n  }\n\n  return (\n    <PopupWithForm title=\"Вы уверены?\" name=\"delete-picture\" isOpen={isOpen} onClose={onClose} onSubmit={handleSumbit} buttonText=\"Да\" />\n  );\n}\n\nexport default DeletePlacePopup;\n","export default __webpack_public_path__ + \"static/media/success-icon.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/decline-icon.7c6a020b.svg\";","import React from 'react';\nimport success from '../images/success-icon.svg';\nimport decline from '../images/decline-icon.svg';\n\nfunction InfoTooltip({isOpen, onClose, isRegistered}) {\n  return (\n    <section className={`popup popup_info ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n      <button onClick={onClose} type=\"button\" className=\"popup__close popup__close_register button\"></button>\n      <img className=\"popup__icon\" src={isRegistered ? success : decline} alt=\"значок статуса регистрации\"/>\n      <p className=\"popup__text\">{ isRegistered ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.' }</p>\n      </div>\n    </section>\n  );\n}\n\nexport default InfoTooltip;\n","// класс для работы с сервером\nclass Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  // проверка ответа от сервера\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  // получение изначальных карточек\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.headers\n    })\n    .then(this._checkResponse);\n  }\n\n  // добавление новой карточки\n  addCard(card) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(card)\n    })\n    .then(this._checkResponse);\n  }\n\n  // удаление карточки\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  // получение информации о пользователе\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers\n    })\n    .then(this._checkResponse);\n  }\n\n  // изменение информации о пользователе\n  changeUserInfo(newInfo) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify(newInfo)\n    })\n    .then(this._checkResponse);\n  }\n\n  // изменить фото в профиле\n  changeAvatar(newLink) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify(newLink)\n    })\n    .then(this._checkResponse);\n  }\n\n  // поставить лайк\n  likeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this.headers\n    })\n    .then(this._checkResponse);\n  }\n\n  // убрать лайк\n  dislikeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n    .then(this._checkResponse);\n  }\n}\n\n// создание экземпляра класса отвечающего за работу с сервером\nexport default new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: 'f6f9ecaf-e6cf-427c-9bec-74dcbb4a47a1',\n    'Content-Type': 'application/json'\n  }\n});\n","class Auth {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  // проверка ответа от сервера\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  // отправка данных для регистрации\n  register(data) {\n    return fetch(`${this.baseUrl}/signup`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(data)\n    })\n    .then(this._checkResponse);\n  }\n\n  // отправка данных для того, чтобы войти\n  login(data) {\n    return fetch(`${this.baseUrl}/signin`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(data)\n    })\n    .then(this._checkResponse);\n  }\n\n  // проверка наличия такого токена\n  checkToken(token) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\" : `Bearer ${token}`\n      }\n    })\n    .then(this._checkResponse);\n  }\n}\n\nexport default new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n","import React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Header from './Header';\nimport Main from './Main';\nimport Login from './Login';\nimport Register from './Register';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeletePlacePopup from './DeletePlacePopup';\nimport InfoTooltip from './InfoTooltip';\nimport api from '../utils/api';\nimport auth from '../utils/auth';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  // объявление переменных состояния\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({isSelected: false});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [deletedCard, setDeletedCard] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isRegistered, setIsRegistered] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n\n  const history = useHistory();\n\n  React.useEffect(() => {\n    const token = localStorage.getItem('token');\n    token && auth.checkToken(token)\n    .then(data => {\n      setLoggedIn(true);\n      setEmail(data.data.email);\n      history.push('/main');\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }, []);\n\n  // получение с сервера информации о пользователе и начальных карточках\n  React.useEffect(() => {\n    loggedIn && Promise.all([api.getUserInfo(), api.getInitialCards()])\n    .then(([userData, cardsData]) => {\n        setCurrentUser(userData);\n        setCards(cardsData);\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }, [loggedIn]);\n\n  // открытие попапа редактирования аватара\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  // открытие попапа редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  // открытие попапа добавления новой фото-карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  // открытие попапа удаления фото-карточки\n  function handleDeleteClick(card) {\n    setIsDeletePopupOpen(true);\n    setDeletedCard(card);\n  }\n\n  // закрытие всех попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard({isSelected: false});\n  }\n\n  // открытие полноразмерной картинки\n  function handleCardClick(card) {\n    setSelectedCard({\n      name: card.name,\n      link: card.link,\n      isSelected: true\n    });\n  }\n\n  // обновление данных о пользователе на сервере\n  function handleUpdateUser(newInfo) {\n    api.changeUserInfo(newInfo)\n    .then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  // обновление аватара пользователя на сервере\n  function handleUpdateAvatar(newInfo, ref) {\n    api.changeAvatar(newInfo)\n    .then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n      ref.current.value = '';\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n   // постановка/снятие лайка с карточки\n   function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (isLiked) {\n      api.dislikeCard(card._id)\n      .then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n    else {\n      api.likeCard(card._id)\n      .then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  // удаление карточки с сервера\n  function handleCardDelete() {\n    api.deleteCard(deletedCard._id)\n    .then(() => {\n      setCards(state => state.filter(c => {return c._id !== deletedCard._id}));\n      closeAllPopups();\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  // добавление новой карточки на сервер\n  function handleAddPlaceSubmit(newCard, setTitle, setLink) {\n    api.addCard(newCard)\n    .then(data => {\n      setCards([data, ...cards]);\n      closeAllPopups();\n      setTitle('');\n      setLink('');\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  // залогинить пользователя\n  function handleLogin(data) {\n    auth.login(data)\n    .then(res => {\n      setEmail(data.email);\n      setLoggedIn(true);\n      localStorage.setItem('token', res.token);\n      history.push('/main');\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  // при успешной регистрации переходим на основную страницу,\n  // а так же сообщаем о статусе регистрации попапом\n  function handleRegister(data) {\n    auth.register(data)\n    .then(res => {\n      setIsRegistered(true);\n      setIsInfoTooltipOpen(true);\n      history.push('./sign-in');\n    })\n    .catch(err => {\n      setIsRegistered(false);\n      setIsInfoTooltipOpen(true);\n      console.log(err);\n    });\n  }\n\n  // выход из аккаунта\n  function handleSignOut() {\n    setLoggedIn(false);\n    setEmail('');\n    localStorage.removeItem('token');\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__container\">\n        <Header onSignOut={handleSignOut} email={email} loggedIn={loggedIn} />\n        <Switch>\n          <Route path=\"/sign-up\">\n            <Register onSubmit={handleRegister} />\n          </Route>\n          <Route path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute\n            path=\"/main\"\n            loggedIn={loggedIn}\n            component={Main}\n            cards={cards}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onCardDelete={handleDeleteClick}\n            onCardLike={handleCardLike}\n          />\n          <Route path=\"/\">\n            { loggedIn ? <Redirect to=\"/main\"/> : <Redirect to=\"/sign-in\" /> }\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateAvatar} />\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n      <DeletePlacePopup isOpen={isDeletePopupOpen} onClose={closeAllPopups} onDelete={handleCardDelete} />\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n      <InfoTooltip isRegistered={isRegistered} isOpen={isInfoTooltipOpen} onClose={closeAllPopups} />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>, document.getElementById('page'));\n"],"sourceRoot":""}